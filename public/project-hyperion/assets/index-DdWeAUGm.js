import{V as U,u as ee,j as a,c as We,D as $,B as _e,F as Xe,E as oe,a as G,b as Ae,d as R,U as X,S as E,e as Ke,f as Ye,g as Ze,h as $e,W as z,i as le,L as Pe,N as Ie,k as Y,l as q,m as qe,M as Qe,C as De,n as pe,o as Je,p as et,q as Q,r as j,s as y,t as ze,T as Le,v as K,R as Fe,P as Oe,w as ve,x as me,y as ce,z as tt,A as st,H as it,G as rt,O as nt,I as at,J as ot}from"./three-DkG7TCEB.js";import{r as v,R as J}from"./react-Bmh0pHUo.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function s(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=s(r);fetch(r.href,n)}})();const ge=.5;function ue(){const[e,t]=v.useState({moveForward:!1,moveBackward:!1,moveLeft:!1,moveRight:!1,mouseX:0,mouseY:0,sprint:!1});return v.useEffect(()=>{const s=c=>{switch(c.code){case"KeyW":case"ArrowUp":t(l=>({...l,moveForward:!0}));break;case"KeyS":case"ArrowDown":t(l=>({...l,moveBackward:!0}));break;case"KeyA":case"ArrowLeft":t(l=>({...l,moveLeft:!0}));break;case"KeyD":case"ArrowRight":t(l=>({...l,moveRight:!0}));break;case"ShiftLeft":t(l=>({...l,sprint:!0}));break}},i=c=>{switch(c.code){case"KeyW":case"ArrowUp":t(l=>({...l,moveForward:!1}));break;case"KeyS":case"ArrowDown":t(l=>({...l,moveBackward:!1}));break;case"KeyA":case"ArrowLeft":t(l=>({...l,moveLeft:!1}));break;case"KeyD":case"ArrowRight":t(l=>({...l,moveRight:!1}));break;case"ShiftLeft":t(l=>({...l,sprint:!1}));break}},r=c=>{if(document.pointerLockElement===document.body){const l=Math.abs(c.movementX)>ge?c.movementX:0,u=Math.abs(c.movementY)>ge?c.movementY:0;t(h=>({...h,mouseX:l,mouseY:u}))}else t(l=>({...l,mouseX:0,mouseY:0}))},n=()=>{(event==null?void 0:event.target)instanceof HTMLCanvasElement&&document.body.requestPointerLock()},o=()=>{document.pointerLockElement||t(c=>({...c,mouseX:0,mouseY:0}))};return window.addEventListener("keydown",s),window.addEventListener("keyup",i),window.addEventListener("mousemove",r),window.addEventListener("click",n),document.addEventListener("pointerlockchange",o),()=>{window.removeEventListener("keydown",s),window.removeEventListener("keyup",i),window.removeEventListener("mousemove",r),window.removeEventListener("click",n),document.removeEventListener("pointerlockchange",o)}},[]),v.useEffect(()=>{if(e.mouseX!==0||e.mouseY!==0){const s=requestAnimationFrame(()=>{t(i=>({...i,mouseX:0,mouseY:0}))});return()=>cancelAnimationFrame(s)}},[e.mouseX,e.mouseY]),e}const lt={distance:8,height:8,heightOffset:4,rotationSpeed:.003,minPolarAngle:-Math.PI/2,maxPolarAngle:Math.PI/2,smoothing:.1};var V=(e=>(e.ThirdPerson="Third Person",e.Orbit="Orbit",e.FreeMove="Free Move",e))(V||{});function ct({target:e,camera:t}){const s=v.useRef(null),{mouseX:i,mouseY:r}=ue(),n=v.useRef({azimuthal:Math.PI,polar:Math.PI/6}),o=v.useRef(new U),c=v.useRef(new U),l={...lt};return ee(()=>{if(!e.current)return;(Math.abs(i)>.01||Math.abs(r)>.01)&&(n.current.azimuthal-=i*l.rotationSpeed,n.current.polar=Math.max(l.minPolarAngle,Math.min(l.maxPolarAngle,n.current.polar+r*l.rotationSpeed)));const u=e.current.position,h=new U(-l.distance*Math.sin(n.current.azimuthal)*Math.cos(n.current.polar),(l.height+l.heightOffset)*Math.sin(n.current.polar),-l.distance*Math.cos(n.current.azimuthal)*Math.cos(n.current.polar)),d=new U().addVectors(u,h);o.current.lerp(d,l.smoothing),t.position.copy(o.current);const p=new U(u.x,u.y+l.heightOffset,u.z);c.current.lerp(p,l.smoothing),t.lookAt(c.current),s.current&&s.current.position.copy(t.position)}),a.jsxs("mesh",{ref:s,children:[a.jsx("sphereGeometry",{args:[.2,16,16]}),a.jsx("meshStandardMaterial",{color:"red"})]})}const ut=[{name:"Apartment",preset:"apartment"},{name:"City",preset:"city"},{name:"Dawn",preset:"dawn"},{name:"Forest",preset:"forest"},{name:"Lobby",preset:"lobby"},{name:"Night",preset:"night"},{name:"Park",preset:"park"},{name:"Studio",preset:"studio"},{name:"Sunset",preset:"sunset"},{name:"Warehouse",preset:"warehouse"}];var W=(e=>(e.None="none",e.Flat="flat",e.Spherical="spherical",e))(W||{});const L=We(e=>({radius:1e3,length:2e3,hillsCount:3,hillHeight:200,hillRatio:.5,endcapType:W.Flat,lightIntensity:3,lightFalloff:2,lightPosition:0,lightColor:"#ffff80",ambientLightIntensity:.2,ambientLightColor:"#ffffff",stationColor:"#3f9b0b",endcapColor:"#87CEEB",hillColor:"#8B4513",environmentMap:ut[0],cameraType:V.ThirdPerson,cameraFOV:60,showWireframe:!1,wireframeColor:"#ffffff",wireframeOpacity:.1,setStationColor:t=>e({stationColor:t}),setEndcapColor:t=>e({endcapColor:t}),setHillColor:t=>e({hillColor:t}),setRadius:t=>e({radius:t}),setLength:t=>e({length:t}),setHillsCount:t=>e({hillsCount:t}),setHillHeight:t=>e({hillHeight:t}),setHillRatio:t=>e({hillRatio:t}),setEndcapType:t=>e({endcapType:t}),setLightIntensity:t=>e({lightIntensity:t}),setLightFalloff:t=>e({lightFalloff:t}),setLightPosition:t=>e({lightPosition:t}),setLightColor:t=>e({lightColor:t}),setAmbientLightIntensity:t=>e({ambientLightIntensity:t}),setAmbientLightColor:t=>e({ambientLightColor:t}),setEnvironmentMap:t=>e({environmentMap:t}),setCameraType:t=>e({cameraType:t}),setCameraFOV:t=>e({cameraFOV:t}),setShowWireframe:t=>e({showWireframe:t}),setWireframeColor:t=>e({wireframeColor:t}),setWireframeOpacity:t=>e({wireframeOpacity:t})})),xe=15,ht=3,Se=6;function dt({camera:e}){const t=v.useRef(null),s=v.useRef(null),{moveForward:i,moveBackward:r,moveLeft:n,moveRight:o,sprint:c}=ue(),{radius:l}=L(),u=v.useRef(new U),h=v.useRef(new U),d=v.useRef(new U),p=v.useRef(new U);v.useEffect(()=>{if(t.current){const M=t.current.position;M.set(0,-(l-Se),0),x(M)}return()=>{document.pointerLockElement===document.body&&document.exitPointerLock()}},[l]);const x=M=>{if(!s.current)return;const b=Math.atan2(-M.x,-M.y)+Math.PI/2,A=Math.atan2(M.y,M.x)+Math.PI/2;s.current.rotation.set(0,0,0),s.current.rotateX(0),s.current.rotateY(b),s.current.rotateZ(-A)};return ee((M,b)=>{if(!t.current||!e)return;u.current.set(0,0,0),e.getWorldDirection(h.current);const A=t.current.position;if(p.current.copy(A).setZ(0).normalize(),h.current.projectOnPlane(p.current),h.current.normalize(),d.current.crossVectors(p.current,h.current),d.current.normalize(),i&&u.current.add(h.current),r&&u.current.sub(h.current),o&&u.current.add(d.current),n&&u.current.sub(d.current),u.current.lengthSq()>0){u.current.normalize();const _=c?xe*ht:xe,T=u.current.multiplyScalar(_*b);t.current.position.add(T);const g=t.current.position,B=Math.sqrt(g.x*g.x+g.y*g.y);if(B!==0){const D=(l-Se)/B;g.x*=D,g.y*=D}x(t.current.position)}}),a.jsxs(a.Fragment,{children:[a.jsx("group",{ref:t,children:a.jsxs("mesh",{ref:s,position:[0,0,0],castShadow:!0,receiveShadow:!0,children:[a.jsx("capsuleGeometry",{args:[.5,2,4,8]}),a.jsx("meshStandardMaterial",{color:"#44aa88",envMapIntensity:.2})]})}),a.jsx(ct,{target:t,camera:e})]})}function ye(e,t,s,i){const r=e/2,n=t/2,o=i/2,c=new Float32Array([-r,0,-o,r,0,-o,r,0,o,-r,0,o,-n,s,-o,n,s,-o,n,s,o,-n,s,o]),l=[0,1,2,0,2,3,4,5,6,4,6,7,0,1,5,0,5,4,2,3,7,2,7,6,0,3,7,0,7,4,1,2,6,1,6,5],u=new _e;return u.setAttribute("position",new Xe(c,3)),u.setIndex(l),u.computeVertexNormals(),u}function ft({position:e,rotation:t,height:s,length:i,color:r,ratio:n}){const o=s*2,c=o*n,l=v.useMemo(()=>ye(o,c,s,i),[o,c,s,i]),{showWireframe:u,wireframeColor:h,wireframeOpacity:d}=L(),p=v.useMemo(()=>ye(o,c,s,i),[o,c,s,i]);return a.jsxs(a.Fragment,{children:[a.jsxs("mesh",{position:e,rotation:t,children:[a.jsx("primitive",{object:l}),a.jsx("meshStandardMaterial",{color:r,side:$,envMapIntensity:.2})]}),u&&a.jsxs("mesh",{position:e,rotation:t,children:[a.jsx("primitive",{object:p}),a.jsx("meshBasicMaterial",{color:h,wireframe:!0,transparent:!0,opacity:d})]})]})}function pt(e){const t=[];for(let s=0;s<e;s++){const i=s/e*Math.PI*2,r=Math.cos(i),n=Math.sin(i),o=new oe(0,0,i+Math.PI/2);t.push({position:new U(r,n,0),rotation:o})}return t}function vt({count:e,stationRadius:t,stationLength:s,hillHeight:i,hillRatio:r,hillColor:n}){const o=v.useMemo(()=>pt(e),[e]),c=v.useMemo(()=>o.map(({position:l,rotation:u})=>({position:l.clone().multiplyScalar(t),rotation:u})),[o,t]);return a.jsx(a.Fragment,{children:c.map(({position:l,rotation:u},h)=>a.jsx(ft,{position:l,rotation:u,height:i,length:s,color:n,ratio:r},`hill-${h}`))})}function mt({position:e,rotation:t}){const s=v.useMemo(()=>({height:10+Math.random()*20,width:5+Math.random()*10}),[]);return a.jsxs("group",{position:e,rotation:t,children:[a.jsxs("mesh",{position:[0,0,s.height/4],rotation:[Math.PI/2,0,0],receiveShadow:!0,castShadow:!0,children:[a.jsx("cylinderGeometry",{args:[s.width/6,s.width/4,s.height/2]}),a.jsx("meshStandardMaterial",{color:"#8B4513",envMapIntensity:.2})]}),a.jsxs("mesh",{position:[0,0,s.height/1.5],rotation:[Math.PI/2,0,0],receiveShadow:!0,castShadow:!0,children:[a.jsx("coneGeometry",{args:[s.width/2,s.height,8]}),a.jsx("meshStandardMaterial",{color:"#228B22",envMapIntensity:.2})]})]})}function gt(e,t,s,i){const r=[],n=()=>(i=i*16807%2147483647,(i-1)/2147483646);for(let o=0;o<e;o++){const c=o/e*Math.PI*2,l=(n()-.5)*s,u=(t-1)*Math.cos(c),h=(t-1)*Math.sin(c),d=Math.atan2(-h,-u),p=-c,x=new oe(-Math.PI/2,d,p);r.push({position:new U(h,u,l),rotation:x})}return r}function xt({stationRadius:e,stationLength:t}){const s=v.useRef(123),i=Math.floor(e/5+t/5),r=v.useMemo(()=>gt(i,e,t,s.current),[i]),n=v.useMemo(()=>r.map(({position:o,rotation:c})=>{const l=o.clone(),u=(e-1)/Math.sqrt(l.x*l.x+l.y*l.y);return l.x*=u,l.y*=u,l.z=l.z/Math.abs(l.z)*(t/2)*(Math.abs(l.z)/(t/2)),{position:l,rotation:c}}),[r,e,t]);return a.jsx(a.Fragment,{children:n.map(({position:o,rotation:c},l)=>a.jsx(mt,{position:o,rotation:c},`tree-${l}`))})}function Te({radius:e,position:t,stationLength:s,color:i}){const r=t==="start"?-s/2-1:s/2+1,n=t==="start"?Ae:G;return a.jsxs("mesh",{position:[0,0,r],children:[a.jsx("circleGeometry",{args:[e,64]}),a.jsx("meshStandardMaterial",{color:i,metalness:.2,roughness:.7,envMapIntensity:.2,side:n})]})}function Me({radius:e,position:t,stationLength:s,color:i}){const r=t==="start"?-s/2:s/2,n=t==="start"?Math.PI:0;return a.jsxs("mesh",{position:[0,0,r],rotation:[Math.PI/2,0,n],children:[a.jsx("sphereGeometry",{args:[e,64,64,0,Math.PI*2,0,Math.PI/2]}),a.jsx("meshStandardMaterial",{color:i,side:G,metalness:.2,roughness:.7,envMapIntensity:.2})]})}function St({stationRadius:e,stationLength:t}){const s=e/100;return a.jsxs("mesh",{rotation:[Math.PI/2,0,0],children:[a.jsx("cylinderGeometry",{args:[s,s,t,16]}),a.jsx("meshStandardMaterial",{color:"#444444",metalness:.8,roughness:.2})]})}function yt({stationRadius:e,stationLength:t,position:s=[0,0,0],color:i="#ffff80",intensity:r=1,size:n=20,falloff:o=1}){const c=v.useRef(null);return v.useEffect(()=>{if(c.current){const l=Math.max(e,t),u=c.current;u.shadow.mapSize.width=2048,u.shadow.mapSize.height=2048,u.shadow.camera.near=l/2,u.shadow.camera.far=l*2,u.shadow.bias=-.001,u.shadow.radius=1,u.shadow.normalBias=.02}},[t]),a.jsxs("group",{position:s,children:[a.jsxs("mesh",{children:[a.jsx("sphereGeometry",{args:[n,32,32]}),a.jsx("meshStandardMaterial",{color:i,emissive:i,emissiveIntensity:r*2,toneMapped:!1,envMapIntensity:.2})]}),a.jsx("pointLight",{ref:c,color:i,intensity:r*1e5,distance:e*2,decay:o,castShadow:!0})]})}function Tt({stationRadius:e,stationLength:t}){const{lightPosition:s,lightColor:i,lightIntensity:r,lightFalloff:n}=L();return a.jsxs("group",{children:[a.jsx(St,{stationRadius:e,stationLength:t}),a.jsx(yt,{stationRadius:e,stationLength:t,position:[0,0,s],color:i,intensity:r,size:e/25,falloff:n})]})}const se=32;function Mt(){const e=v.useRef(null),{radius:t,length:s,hillsCount:i,hillHeight:r,hillRatio:n,endcapType:o,stationColor:c,endcapColor:l,hillColor:u,showWireframe:h,wireframeColor:d,wireframeOpacity:p}=L();return a.jsxs(a.Fragment,{children:[a.jsxs("mesh",{ref:e,rotation:[Math.PI/2,0,0],receiveShadow:!0,children:[a.jsx("cylinderGeometry",{args:[t,t,s,se,1,!0]}),a.jsx("meshStandardMaterial",{color:c,side:G,metalness:.1,roughness:.8,envMapIntensity:.2})]}),h&&a.jsxs("mesh",{rotation:[Math.PI/2,0,0],children:[a.jsx("cylinderGeometry",{args:[t-.001,t-.001,s-.001,se,se,!0]}),a.jsx("meshBasicMaterial",{color:d,wireframe:!0,transparent:!0,opacity:p,side:G})]}),o===W.Flat&&a.jsxs(a.Fragment,{children:[a.jsx(Te,{radius:t,stationLength:s,position:"start",color:l}),a.jsx(Te,{radius:t,stationLength:s,position:"end",color:l})]}),o===W.Spherical&&a.jsxs(a.Fragment,{children:[a.jsx(Me,{radius:t,stationLength:s,position:"start",color:l}),a.jsx(Me,{radius:t,stationLength:s,position:"end",color:l})]}),a.jsx(vt,{count:i,stationRadius:t,stationLength:s,hillHeight:r,hillRatio:n,hillColor:u}),a.jsx(xt,{stationRadius:t,stationLength:s}),a.jsx(Tt,{stationRadius:t,stationLength:s})]})}/**
 * postprocessing v6.36.6 build Tue Dec 31 2024
 * https://github.com/pmndrs/postprocessing
 * Copyright 2015-2024 Raoul van Rüschen
 * @license Zlib
 */var ie=1/1e3,bt=1e3,Et=class{constructor(){this.startTime=performance.now(),this.previousTime=0,this.currentTime=0,this._delta=0,this._elapsed=0,this._fixedDelta=1e3/60,this.timescale=1,this.useFixedDelta=!1,this._autoReset=!1}get autoReset(){return this._autoReset}set autoReset(e){typeof document<"u"&&document.hidden!==void 0&&(e?document.addEventListener("visibilitychange",this):document.removeEventListener("visibilitychange",this),this._autoReset=e)}get delta(){return this._delta*ie}get fixedDelta(){return this._fixedDelta*ie}set fixedDelta(e){this._fixedDelta=e*bt}get elapsed(){return this._elapsed*ie}update(e){this.useFixedDelta?this._delta=this.fixedDelta:(this.previousTime=this.currentTime,this.currentTime=(e!==void 0?e:performance.now())-this.startTime,this._delta=this.currentTime-this.previousTime),this._delta*=this.timescale,this._elapsed+=this._delta}reset(){this._delta=0,this._elapsed=0,this.currentTime=performance.now()-this.startTime}getDelta(){return this.delta}getElapsed(){return this.elapsed}handleEvent(e){document.hidden||(this.currentTime=performance.now()-this.startTime)}dispose(){this.autoReset=!1}},wt=(()=>{const e=new Float32Array([-1,-1,0,3,-1,0,-1,3,0]),t=new Float32Array([0,0,2,0,0,2]),s=new _e;return s.setAttribute("position",new ve(e,3)),s.setAttribute("uv",new ve(t,2)),s})(),C=class ne{static get fullscreenGeometry(){return wt}constructor(t="Pass",s=new pe,i=new Je){this.name=t,this.renderer=null,this.scene=s,this.camera=i,this.screen=null,this.rtt=!0,this.needsSwap=!0,this.needsDepthTexture=!1,this.enabled=!0}get renderToScreen(){return!this.rtt}set renderToScreen(t){if(this.rtt===t){const s=this.fullscreenMaterial;s!==null&&(s.needsUpdate=!0),this.rtt=!t}}set mainScene(t){}set mainCamera(t){}setRenderer(t){this.renderer=t}isEnabled(){return this.enabled}setEnabled(t){this.enabled=t}get fullscreenMaterial(){return this.screen!==null?this.screen.material:null}set fullscreenMaterial(t){let s=this.screen;s!==null?s.material=t:(s=new et(ne.fullscreenGeometry,t),s.frustumCulled=!1,this.scene===null&&(this.scene=new pe),this.scene.add(s),this.screen=s)}getFullscreenMaterial(){return this.fullscreenMaterial}setFullscreenMaterial(t){this.fullscreenMaterial=t}getDepthTexture(){return null}setDepthTexture(t,s=Y){}render(t,s,i,r,n){throw new Error("Render method not implemented!")}setSize(t,s){}initialize(t,s,i){}dispose(){for(const t of Object.keys(this)){const s=this[t];(s instanceof z||s instanceof ze||s instanceof Le||s instanceof ne)&&this[t].dispose()}this.fullscreenMaterial!==null&&this.fullscreenMaterial.dispose()}},Rt=class extends C{constructor(){super("ClearMaskPass",null,null),this.needsSwap=!1}render(e,t,s,i,r){const n=e.state.buffers.stencil;n.setLocked(!1),n.setTest(!1)}},Bt=`#include <common>
#include <dithering_pars_fragment>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
uniform float opacity;varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);gl_FragColor=opacity*texel;
#include <colorspace_fragment>
#include <dithering_fragment>
}`,Ne="varying vec2 vUv;void main(){vUv=position.xy*0.5+0.5;gl_Position=vec4(position.xy,1.0,1.0);}",He=class extends j{constructor(){super({name:"CopyMaterial",uniforms:{inputBuffer:new y(null),opacity:new y(1)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Bt,vertexShader:Ne})}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}getOpacity(e){return this.uniforms.opacity.value}setOpacity(e){this.uniforms.opacity.value=e}},Ct=class extends C{constructor(e,t=!0){super("CopyPass"),this.fullscreenMaterial=new He,this.needsSwap=!1,this.renderTarget=e,e===void 0&&(this.renderTarget=new z(1,1,{minFilter:Q,magFilter:Q,stencilBuffer:!1,depthBuffer:!1}),this.renderTarget.texture.name="CopyPass.Target"),this.autoResize=t}get resize(){return this.autoResize}set resize(e){this.autoResize=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}setAutoResizeEnabled(e){this.autoResize=e}render(e,t,s,i,r){this.fullscreenMaterial.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){this.autoResize&&this.renderTarget.setSize(e,t)}initialize(e,t,s){s!==void 0&&(this.renderTarget.texture.type=s,s!==X?this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1":e!==null&&e.outputColorSpace===E&&(this.renderTarget.texture.colorSpace=E))}},be=new De,Ge=class extends C{constructor(e=!0,t=!0,s=!1){super("ClearPass",null,null),this.needsSwap=!1,this.color=e,this.depth=t,this.stencil=s,this.overrideClearColor=null,this.overrideClearAlpha=-1}setClearFlags(e,t,s){this.color=e,this.depth=t,this.stencil=s}getOverrideClearColor(){return this.overrideClearColor}setOverrideClearColor(e){this.overrideClearColor=e}getOverrideClearAlpha(){return this.overrideClearAlpha}setOverrideClearAlpha(e){this.overrideClearAlpha=e}render(e,t,s,i,r){const n=this.overrideClearColor,o=this.overrideClearAlpha,c=e.getClearAlpha(),l=n!==null,u=o>=0;l?(e.getClearColor(be),e.setClearColor(n,u?o:c)):u&&e.setClearAlpha(o),e.setRenderTarget(this.renderToScreen?null:t),e.clear(this.color,this.depth,this.stencil),l?e.setClearColor(be,c):u&&e.setClearAlpha(c)}},Ut=class extends C{constructor(e,t){super("MaskPass",e,t),this.needsSwap=!1,this.clearPass=new Ge(!1,!1,!0),this.inverse=!1}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get inverted(){return this.inverse}set inverted(e){this.inverse=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getClearPass(){return this.clearPass}isInverted(){return this.inverted}setInverted(e){this.inverted=e}render(e,t,s,i,r){const n=e.getContext(),o=e.state.buffers,c=this.scene,l=this.camera,u=this.clearPass,h=this.inverted?0:1,d=1-h;o.color.setMask(!1),o.depth.setMask(!1),o.color.setLocked(!0),o.depth.setLocked(!0),o.stencil.setTest(!0),o.stencil.setOp(n.REPLACE,n.REPLACE,n.REPLACE),o.stencil.setFunc(n.ALWAYS,h,4294967295),o.stencil.setClear(d),o.stencil.setLocked(!0),this.clearPass.enabled&&(this.renderToScreen?u.render(e,null):(u.render(e,t),u.render(e,s))),this.renderToScreen?(e.setRenderTarget(null),e.render(c,l)):(e.setRenderTarget(t),e.render(c,l),e.setRenderTarget(s),e.render(c,l)),o.color.setLocked(!1),o.depth.setLocked(!1),o.stencil.setLocked(!1),o.stencil.setFunc(n.EQUAL,1,4294967295),o.stencil.setOp(n.KEEP,n.KEEP,n.KEEP),o.stencil.setLocked(!0)}},_t=class{constructor(t=null,{depthBuffer:s=!0,stencilBuffer:i=!1,multisampling:r=0,frameBufferType:n}={}){this.renderer=null,this.inputBuffer=this.createBuffer(s,i,n,r),this.outputBuffer=this.inputBuffer.clone(),this.copyPass=new Ct,this.depthTexture=null,this.passes=[],this.timer=new Et,this.autoRenderToScreen=!0,this.setRenderer(t)}get multisampling(){return this.inputBuffer.samples||0}set multisampling(t){const s=this.inputBuffer,i=this.multisampling;i>0&&t>0?(this.inputBuffer.samples=t,this.outputBuffer.samples=t,this.inputBuffer.dispose(),this.outputBuffer.dispose()):i!==t&&(this.inputBuffer.dispose(),this.outputBuffer.dispose(),this.inputBuffer=this.createBuffer(s.depthBuffer,s.stencilBuffer,s.texture.type,t),this.inputBuffer.depthTexture=this.depthTexture,this.outputBuffer=this.inputBuffer.clone())}getTimer(){return this.timer}getRenderer(){return this.renderer}setRenderer(t){if(this.renderer=t,t!==null){const s=t.getSize(new R),i=t.getContext().getContextAttributes().alpha,r=this.inputBuffer.texture.type;r===X&&t.outputColorSpace===E&&(this.inputBuffer.texture.colorSpace=E,this.outputBuffer.texture.colorSpace=E,this.inputBuffer.dispose(),this.outputBuffer.dispose()),t.autoClear=!1,this.setSize(s.width,s.height);for(const n of this.passes)n.initialize(t,i,r)}}replaceRenderer(t,s=!0){const i=this.renderer,r=i.domElement.parentNode;return this.setRenderer(t),s&&r!==null&&(r.removeChild(i.domElement),r.appendChild(t.domElement)),i}createDepthTexture(){const t=this.depthTexture=new Ke;return this.inputBuffer.depthTexture=t,this.inputBuffer.dispose(),this.inputBuffer.stencilBuffer?(t.format=Ye,t.type=Ze):t.type=$e,t}deleteDepthTexture(){if(this.depthTexture!==null){this.depthTexture.dispose(),this.depthTexture=null,this.inputBuffer.depthTexture=null,this.inputBuffer.dispose();for(const t of this.passes)t.setDepthTexture(null)}}createBuffer(t,s,i,r){const n=this.renderer,o=n===null?new R:n.getDrawingBufferSize(new R),c={minFilter:Q,magFilter:Q,stencilBuffer:s,depthBuffer:t,type:i},l=new z(o.width,o.height,c);return r>0&&(l.ignoreDepthForMultisampleCopy=!1,l.samples=r),i===X&&n!==null&&n.outputColorSpace===E&&(l.texture.colorSpace=E),l.texture.name="EffectComposer.Buffer",l.texture.generateMipmaps=!1,l}setMainScene(t){for(const s of this.passes)s.mainScene=t}setMainCamera(t){for(const s of this.passes)s.mainCamera=t}addPass(t,s){const i=this.passes,r=this.renderer,n=r.getDrawingBufferSize(new R),o=r.getContext().getContextAttributes().alpha,c=this.inputBuffer.texture.type;if(t.setRenderer(r),t.setSize(n.width,n.height),t.initialize(r,o,c),this.autoRenderToScreen&&(i.length>0&&(i[i.length-1].renderToScreen=!1),t.renderToScreen&&(this.autoRenderToScreen=!1)),s!==void 0?i.splice(s,0,t):i.push(t),this.autoRenderToScreen&&(i[i.length-1].renderToScreen=!0),t.needsDepthTexture||this.depthTexture!==null)if(this.depthTexture===null){const l=this.createDepthTexture();for(t of i)t.setDepthTexture(l)}else t.setDepthTexture(this.depthTexture)}removePass(t){const s=this.passes,i=s.indexOf(t);if(i!==-1&&s.splice(i,1).length>0){if(this.depthTexture!==null){const o=(l,u)=>l||u.needsDepthTexture;s.reduce(o,!1)||(t.getDepthTexture()===this.depthTexture&&t.setDepthTexture(null),this.deleteDepthTexture())}this.autoRenderToScreen&&i===s.length&&(t.renderToScreen=!1,s.length>0&&(s[s.length-1].renderToScreen=!0))}}removeAllPasses(){const t=this.passes;this.deleteDepthTexture(),t.length>0&&(this.autoRenderToScreen&&(t[t.length-1].renderToScreen=!1),this.passes=[])}render(t){const s=this.renderer,i=this.copyPass;let r=this.inputBuffer,n=this.outputBuffer,o=!1,c,l,u;t===void 0&&(this.timer.update(),t=this.timer.getDelta());for(const h of this.passes)h.enabled&&(h.render(s,r,n,t,o),h.needsSwap&&(o&&(i.renderToScreen=h.renderToScreen,c=s.getContext(),l=s.state.buffers.stencil,l.setFunc(c.NOTEQUAL,1,4294967295),i.render(s,r,n,t,o),l.setFunc(c.EQUAL,1,4294967295)),u=r,r=n,n=u),h instanceof Ut?o=!0:h instanceof Rt&&(o=!1))}setSize(t,s,i){const r=this.renderer,n=r.getSize(new R);(t===void 0||s===void 0)&&(t=n.width,s=n.height),(n.width!==t||n.height!==s)&&r.setSize(t,s,i);const o=r.getDrawingBufferSize(new R);this.inputBuffer.setSize(o.width,o.height),this.outputBuffer.setSize(o.width,o.height);for(const c of this.passes)c.setSize(o.width,o.height)}reset(){this.dispose(),this.autoRenderToScreen=!0}dispose(){for(const t of this.passes)t.dispose();this.passes=[],this.inputBuffer!==null&&this.inputBuffer.dispose(),this.outputBuffer!==null&&this.outputBuffer.dispose(),this.deleteDepthTexture(),this.copyPass.dispose(),this.timer.dispose(),C.fullscreenGeometry.dispose()}},O={NONE:0,DEPTH:1,CONVOLUTION:2},S={FRAGMENT_HEAD:"FRAGMENT_HEAD",FRAGMENT_MAIN_UV:"FRAGMENT_MAIN_UV",FRAGMENT_MAIN_IMAGE:"FRAGMENT_MAIN_IMAGE",VERTEX_HEAD:"VERTEX_HEAD",VERTEX_MAIN_SUPPORT:"VERTEX_MAIN_SUPPORT"},At=class{constructor(){this.shaderParts=new Map([[S.FRAGMENT_HEAD,null],[S.FRAGMENT_MAIN_UV,null],[S.FRAGMENT_MAIN_IMAGE,null],[S.VERTEX_HEAD,null],[S.VERTEX_MAIN_SUPPORT,null]]),this.defines=new Map,this.uniforms=new Map,this.blendModes=new Map,this.extensions=new Set,this.attributes=O.NONE,this.varyings=new Set,this.uvTransformation=!1,this.readDepth=!1,this.colorSpace=Pe}},re=!1,Ee=class{constructor(e=null){this.originalMaterials=new Map,this.material=null,this.materials=null,this.materialsBackSide=null,this.materialsDoubleSide=null,this.materialsFlatShaded=null,this.materialsFlatShadedBackSide=null,this.materialsFlatShadedDoubleSide=null,this.setMaterial(e),this.meshCount=0,this.replaceMaterial=t=>{if(t.isMesh){let s;if(t.material.flatShading)switch(t.material.side){case $:s=this.materialsFlatShadedDoubleSide;break;case G:s=this.materialsFlatShadedBackSide;break;default:s=this.materialsFlatShaded;break}else switch(t.material.side){case $:s=this.materialsDoubleSide;break;case G:s=this.materialsBackSide;break;default:s=this.materials;break}this.originalMaterials.set(t,t.material),t.isSkinnedMesh?t.material=s[2]:t.isInstancedMesh?t.material=s[1]:t.material=s[0],++this.meshCount}}}cloneMaterial(e){if(!(e instanceof j))return e.clone();const t=e.uniforms,s=new Map;for(const r in t){const n=t[r].value;n.isRenderTargetTexture&&(t[r].value=null,s.set(r,n))}const i=e.clone();for(const r of s)t[r[0]].value=r[1],i.uniforms[r[0]].value=r[1];return i}setMaterial(e){if(this.disposeMaterials(),this.material=e,e!==null){const t=this.materials=[this.cloneMaterial(e),this.cloneMaterial(e),this.cloneMaterial(e)];for(const s of t)s.uniforms=Object.assign({},e.uniforms),s.side=Ae;t[2].skinning=!0,this.materialsBackSide=t.map(s=>{const i=this.cloneMaterial(s);return i.uniforms=Object.assign({},e.uniforms),i.side=G,i}),this.materialsDoubleSide=t.map(s=>{const i=this.cloneMaterial(s);return i.uniforms=Object.assign({},e.uniforms),i.side=$,i}),this.materialsFlatShaded=t.map(s=>{const i=this.cloneMaterial(s);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i}),this.materialsFlatShadedBackSide=t.map(s=>{const i=this.cloneMaterial(s);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i.side=G,i}),this.materialsFlatShadedDoubleSide=t.map(s=>{const i=this.cloneMaterial(s);return i.uniforms=Object.assign({},e.uniforms),i.flatShading=!0,i.side=$,i})}}render(e,t,s){const i=e.shadowMap.enabled;if(e.shadowMap.enabled=!1,re){const r=this.originalMaterials;this.meshCount=0,t.traverse(this.replaceMaterial),e.render(t,s);for(const n of r)n[0].material=n[1];this.meshCount!==r.size&&r.clear()}else{const r=t.overrideMaterial;t.overrideMaterial=this.material,e.render(t,s),t.overrideMaterial=r}e.shadowMap.enabled=i}disposeMaterials(){if(this.material!==null){const e=this.materials.concat(this.materialsBackSide).concat(this.materialsDoubleSide).concat(this.materialsFlatShaded).concat(this.materialsFlatShadedBackSide).concat(this.materialsFlatShadedDoubleSide);for(const t of e)t.dispose()}}dispose(){this.originalMaterials.clear(),this.disposeMaterials()}static get workaroundEnabled(){return re}static set workaroundEnabled(e){re=e}},H=-1,w=class extends le{constructor(e,t=H,s=H,i=1){super(),this.resizable=e,this.baseSize=new R(1,1),this.preferredSize=new R(t,s),this.target=this.preferredSize,this.s=i,this.effectiveSize=new R,this.addEventListener("change",()=>this.updateEffectiveSize()),this.updateEffectiveSize()}updateEffectiveSize(){const e=this.baseSize,t=this.preferredSize,s=this.effectiveSize,i=this.scale;t.width!==H?s.width=t.width:t.height!==H?s.width=Math.round(t.height*(e.width/Math.max(e.height,1))):s.width=Math.round(e.width*i),t.height!==H?s.height=t.height:t.width!==H?s.height=Math.round(t.width/Math.max(e.width/Math.max(e.height,1),1)):s.height=Math.round(e.height*i)}get width(){return this.effectiveSize.width}set width(e){this.preferredWidth=e}get height(){return this.effectiveSize.height}set height(e){this.preferredHeight=e}getWidth(){return this.width}getHeight(){return this.height}get scale(){return this.s}set scale(e){this.s!==e&&(this.s=e,this.preferredSize.setScalar(H),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getScale(){return this.scale}setScale(e){this.scale=e}get baseWidth(){return this.baseSize.width}set baseWidth(e){this.baseSize.width!==e&&(this.baseSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseWidth(){return this.baseWidth}setBaseWidth(e){this.baseWidth=e}get baseHeight(){return this.baseSize.height}set baseHeight(e){this.baseSize.height!==e&&(this.baseSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getBaseHeight(){return this.baseHeight}setBaseHeight(e){this.baseHeight=e}setBaseSize(e,t){(this.baseSize.width!==e||this.baseSize.height!==t)&&(this.baseSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}get preferredWidth(){return this.preferredSize.width}set preferredWidth(e){this.preferredSize.width!==e&&(this.preferredSize.width=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredWidth(){return this.preferredWidth}setPreferredWidth(e){this.preferredWidth=e}get preferredHeight(){return this.preferredSize.height}set preferredHeight(e){this.preferredSize.height!==e&&(this.preferredSize.height=e,this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}getPreferredHeight(){return this.preferredHeight}setPreferredHeight(e){this.preferredHeight=e}setPreferredSize(e,t){(this.preferredSize.width!==e||this.preferredSize.height!==t)&&(this.preferredSize.set(e,t),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height))}copy(e){this.s=e.scale,this.baseSize.set(e.baseWidth,e.baseHeight),this.preferredSize.set(e.preferredWidth,e.preferredHeight),this.dispatchEvent({type:"change"}),this.resizable.setSize(this.baseSize.width,this.baseSize.height)}static get AUTO_SIZE(){return H}},m={SKIP:9,SET:30,ADD:0,ALPHA:1,AVERAGE:2,COLOR:3,COLOR_BURN:4,COLOR_DODGE:5,DARKEN:6,DIFFERENCE:7,DIVIDE:8,DST:9,EXCLUSION:10,HARD_LIGHT:11,HARD_MIX:12,HUE:13,INVERT:14,INVERT_RGB:15,LIGHTEN:16,LINEAR_BURN:17,LINEAR_DODGE:18,LINEAR_LIGHT:19,LUMINOSITY:20,MULTIPLY:21,NEGATION:22,NORMAL:23,OVERLAY:24,PIN_LIGHT:25,REFLECT:26,SATURATION:27,SCREEN:28,SOFT_LIGHT:29,SRC:30,SUBTRACT:31,VIVID_LIGHT:32},Pt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y,opacity);}",It="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,min(y.a,opacity));}",Dt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y)*0.5,opacity);}",zt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.rg,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Lt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(step(0.0,y)*(1.0-min(vec4(1.0),(1.0-x)/y)),vec4(1.0),step(1.0,x));return mix(x,z,opacity);}",Ft="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=step(0.0,x)*mix(min(vec4(1.0),x/max(1.0-y,1e-9)),vec4(1.0),step(1.0,y));return mix(x,z,opacity);}",Ot="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x,y),opacity);}",Nt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,abs(x-y),opacity);}",Ht="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x/max(y,1e-12),opacity);}",Gt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,(x+y-2.0*x*y),opacity);}",jt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 a=min(x,1.0),b=min(y,1.0);vec4 z=mix(2.0*a*b,1.0-2.0*(1.0-a)*(1.0-b),step(0.5,y));return mix(x,z,opacity);}",kt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,step(1.0,x+y),opacity);}",Vt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(yHSL.r,xHSL.gb));return vec4(mix(x.rgb,z,opacity),y.a);}",Wt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-y,opacity);}",Xt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y*(1.0-x),opacity);}",Kt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x,y),opacity);}",Yt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(y+x-1.0,0.0,1.0),opacity);}",Zt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,min(x+y,1.0),opacity);}",$t="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,clamp(2.0*y+x-1.0,0.0,1.0),opacity);}",qt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.rg,yHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",Qt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x*y,opacity);}",Jt="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,1.0-abs(1.0-x-y),opacity);}",es="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,y,opacity);}",ts="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(2.0*y*x,1.0-2.0*(1.0-y)*(1.0-x),step(0.5,x));return mix(x,z,opacity);}",ss="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 z=mix(mix(y2,x,step(0.5*x,y)),max(vec4(0.0),y2-1.0),step(x,(y2-1.0)));return mix(x,z,opacity);}",is="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(min(x*x/max(1.0-y,1e-12),1.0),y,step(1.0,y));return mix(x,z,opacity);}",rs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec3 xHSL=RGBToHSL(x.rgb);vec3 yHSL=RGBToHSL(y.rgb);vec3 z=HSLToRGB(vec3(xHSL.r,yHSL.g,xHSL.b));return vec4(mix(x.rgb,z,opacity),y.a);}",ns="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,x+y-min(x*y,1.0),opacity);}",as="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 y2=2.0*y;vec4 w=step(0.5,y);vec4 z=mix(x-(1.0-y2)*x*(1.0-x),mix(x+(y2-1.0)*(sqrt(x)-x),x+(y2-1.0)*x*((16.0*x-12.0)*x+3.0),w*(1.0-step(0.25,x))),w);return mix(x,z,opacity);}",os="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return y;}",ls="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){return mix(x,max(x+y-1.0,0.0),opacity);}",cs="vec4 blend(const in vec4 x,const in vec4 y,const in float opacity){vec4 z=mix(max(1.0-min((1.0-x)/(2.0*y),1.0),0.0),min(x/(2.0*(1.0-y)),1.0),step(0.5,y));return mix(x,z,opacity);}",us=new Map([[m.ADD,Pt],[m.ALPHA,It],[m.AVERAGE,Dt],[m.COLOR,zt],[m.COLOR_BURN,Lt],[m.COLOR_DODGE,Ft],[m.DARKEN,Ot],[m.DIFFERENCE,Nt],[m.DIVIDE,Ht],[m.DST,null],[m.EXCLUSION,Gt],[m.HARD_LIGHT,jt],[m.HARD_MIX,kt],[m.HUE,Vt],[m.INVERT,Wt],[m.INVERT_RGB,Xt],[m.LIGHTEN,Kt],[m.LINEAR_BURN,Yt],[m.LINEAR_DODGE,Zt],[m.LINEAR_LIGHT,$t],[m.LUMINOSITY,qt],[m.MULTIPLY,Qt],[m.NEGATION,Jt],[m.NORMAL,es],[m.OVERLAY,ts],[m.PIN_LIGHT,ss],[m.REFLECT,is],[m.SATURATION,rs],[m.SCREEN,ns],[m.SOFT_LIGHT,as],[m.SRC,os],[m.SUBTRACT,ls],[m.VIVID_LIGHT,cs]]),hs=class extends le{constructor(e,t=1){super(),this._blendFunction=e,this.opacity=new y(t)}getOpacity(){return this.opacity.value}setOpacity(e){this.opacity.value=e}get blendFunction(){return this._blendFunction}set blendFunction(e){this._blendFunction=e,this.dispatchEvent({type:"change"})}getBlendFunction(){return this.blendFunction}setBlendFunction(e){this.blendFunction=e}getShaderCode(){return us.get(this.blendFunction)}},he={VERY_SMALL:0,SMALL:1,MEDIUM:2,LARGE:3,VERY_LARGE:4,HUGE:5},ds=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec4 sum=texture2D(inputBuffer,vUv0);sum+=texture2D(inputBuffer,vUv1);sum+=texture2D(inputBuffer,vUv2);sum+=texture2D(inputBuffer,vUv3);gl_FragColor=sum*0.25;
#include <colorspace_fragment>
}`,fs="uniform vec4 texelSize;uniform float kernel;uniform float scale;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vec2 dUv=(texelSize.xy*vec2(kernel)+texelSize.zw)*scale;vUv0=vec2(uv.x-dUv.x,uv.y+dUv.y);vUv1=vec2(uv.x+dUv.x,uv.y+dUv.y);vUv2=vec2(uv.x+dUv.x,uv.y-dUv.y);vUv3=vec2(uv.x-dUv.x,uv.y-dUv.y);gl_Position=vec4(position.xy,1.0,1.0);}",ps=[new Float32Array([0,0]),new Float32Array([0,1,1]),new Float32Array([0,1,1,2]),new Float32Array([0,1,2,2,3]),new Float32Array([0,1,2,3,4,4,5]),new Float32Array([0,1,2,3,4,5,7,8,9,10])],vs=class extends j{constructor(e=new me){super({name:"KawaseBlurMaterial",uniforms:{inputBuffer:new y(null),texelSize:new y(new me),scale:new y(1),kernel:new y(0)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:ds,vertexShader:fs}),this.setTexelSize(e.x,e.y),this.kernelSize=he.MEDIUM}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.inputBuffer=e}get kernelSequence(){return ps[this.kernelSize]}get scale(){return this.uniforms.scale.value}set scale(e){this.uniforms.scale.value=e}getScale(){return this.uniforms.scale.value}setScale(e){this.uniforms.scale.value=e}getKernel(){return null}get kernel(){return this.uniforms.kernel.value}set kernel(e){this.uniforms.kernel.value=e}setKernel(e){this.kernel=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t,e*.5,t*.5)}setSize(e,t){const s=1/e,i=1/t;this.uniforms.texelSize.value.set(s,i,s*.5,i*.5)}},ms=class extends C{constructor({kernelSize:e=he.MEDIUM,resolutionScale:t=.5,width:s=w.AUTO_SIZE,height:i=w.AUTO_SIZE,resolutionX:r=s,resolutionY:n=i}={}){super("KawaseBlurPass"),this.renderTargetA=new z(1,1,{depthBuffer:!1}),this.renderTargetA.texture.name="Blur.Target.A",this.renderTargetB=this.renderTargetA.clone(),this.renderTargetB.texture.name="Blur.Target.B";const o=this.resolution=new w(this,r,n,t);o.addEventListener("change",c=>this.setSize(o.baseWidth,o.baseHeight)),this._blurMaterial=new vs,this._blurMaterial.kernelSize=e,this.copyMaterial=new He}getResolution(){return this.resolution}get blurMaterial(){return this._blurMaterial}set blurMaterial(e){this._blurMaterial=e}get dithering(){return this.copyMaterial.dithering}set dithering(e){this.copyMaterial.dithering=e}get kernelSize(){return this.blurMaterial.kernelSize}set kernelSize(e){this.blurMaterial.kernelSize=e}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get scale(){return this.blurMaterial.scale}set scale(e){this.blurMaterial.scale=e}getScale(){return this.blurMaterial.scale}setScale(e){this.blurMaterial.scale=e}getKernelSize(){return this.kernelSize}setKernelSize(e){this.kernelSize=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,s,i,r){const n=this.scene,o=this.camera,c=this.renderTargetA,l=this.renderTargetB,u=this.blurMaterial,h=u.kernelSequence;let d=t;this.fullscreenMaterial=u;for(let p=0,x=h.length;p<x;++p){const M=p&1?l:c;u.kernel=h[p],u.inputBuffer=d.texture,e.setRenderTarget(M),e.render(n,o),d=M}this.fullscreenMaterial=this.copyMaterial,this.copyMaterial.inputBuffer=d.texture,e.setRenderTarget(this.renderToScreen?null:s),e.render(n,o)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t);const i=s.width,r=s.height;this.renderTargetA.setSize(i,r),this.renderTargetB.setSize(i,r),this.blurMaterial.setSize(e,t)}initialize(e,t,s){s!==void 0&&(this.renderTargetA.texture.type=s,this.renderTargetB.texture.type=s,s!==X?(this.blurMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.copyMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1"):e!==null&&e.outputColorSpace===E&&(this.renderTargetA.texture.colorSpace=E,this.renderTargetB.texture.colorSpace=E))}static get AUTO_SIZE(){return w.AUTO_SIZE}},gs=`#include <common>
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#ifdef RANGE
uniform vec2 range;
#elif defined(THRESHOLD)
uniform float threshold;uniform float smoothing;
#endif
varying vec2 vUv;void main(){vec4 texel=texture2D(inputBuffer,vUv);float l=luminance(texel.rgb);
#ifdef RANGE
float low=step(range.x,l);float high=step(l,range.y);l*=low*high;
#elif defined(THRESHOLD)
l=smoothstep(threshold,threshold+smoothing,l)*l;
#endif
#ifdef COLOR
gl_FragColor=vec4(texel.rgb*clamp(l,0.0,1.0),l);
#else
gl_FragColor=vec4(l);
#endif
}`,xs=class extends j{constructor(e=!1,t=null){super({name:"LuminanceMaterial",defines:{THREE_REVISION:Fe.replace(/\D+/g,"")},uniforms:{inputBuffer:new y(null),threshold:new y(0),smoothing:new y(1),range:new y(null)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:gs,vertexShader:Ne}),this.colorOutput=e,this.luminanceRange=t}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get threshold(){return this.uniforms.threshold.value}set threshold(e){this.smoothing>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.threshold.value=e}getThreshold(){return this.threshold}setThreshold(e){this.threshold=e}get smoothing(){return this.uniforms.smoothing.value}set smoothing(e){this.threshold>0||e>0?this.defines.THRESHOLD="1":delete this.defines.THRESHOLD,this.uniforms.smoothing.value=e}getSmoothingFactor(){return this.smoothing}setSmoothingFactor(e){this.smoothing=e}get useThreshold(){return this.threshold>0||this.smoothing>0}set useThreshold(e){}get colorOutput(){return this.defines.COLOR!==void 0}set colorOutput(e){e?this.defines.COLOR="1":delete this.defines.COLOR,this.needsUpdate=!0}isColorOutputEnabled(e){return this.colorOutput}setColorOutputEnabled(e){this.colorOutput=e}get useRange(){return this.luminanceRange!==null}set useRange(e){this.luminanceRange=null}get luminanceRange(){return this.uniforms.range.value}set luminanceRange(e){e!==null?this.defines.RANGE="1":delete this.defines.RANGE,this.uniforms.range.value=e,this.needsUpdate=!0}getLuminanceRange(){return this.luminanceRange}setLuminanceRange(e){this.luminanceRange=e}},Ss=class extends C{constructor({renderTarget:e,luminanceRange:t,colorOutput:s,resolutionScale:i=1,width:r=w.AUTO_SIZE,height:n=w.AUTO_SIZE,resolutionX:o=r,resolutionY:c=n}={}){super("LuminancePass"),this.fullscreenMaterial=new xs(s,t),this.needsSwap=!1,this.renderTarget=e,this.renderTarget===void 0&&(this.renderTarget=new z(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="LuminancePass.Target");const l=this.resolution=new w(this,o,c,i);l.addEventListener("change",u=>this.setSize(l.baseWidth,l.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}render(e,t,s,i,r){const n=this.fullscreenMaterial;n.inputBuffer=t.texture,e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height)}initialize(e,t,s){s!==void 0&&s!==X&&(this.renderTarget.texture.type=s,this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}},ys=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#define WEIGHT_INNER 0.125
#define WEIGHT_OUTER 0.0555555
varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;float clampToBorder(const in vec2 uv){return float(uv.s>=0.0&&uv.s<=1.0&&uv.t>=0.0&&uv.t<=1.0);}void main(){vec4 c=vec4(0.0);vec4 w=WEIGHT_INNER*vec4(clampToBorder(vUv00),clampToBorder(vUv01),clampToBorder(vUv02),clampToBorder(vUv03));c+=w.x*texture2D(inputBuffer,vUv00);c+=w.y*texture2D(inputBuffer,vUv01);c+=w.z*texture2D(inputBuffer,vUv02);c+=w.w*texture2D(inputBuffer,vUv03);w=WEIGHT_OUTER*vec4(clampToBorder(vUv04),clampToBorder(vUv05),clampToBorder(vUv06),clampToBorder(vUv07));c+=w.x*texture2D(inputBuffer,vUv04);c+=w.y*texture2D(inputBuffer,vUv05);c+=w.z*texture2D(inputBuffer,vUv06);c+=w.w*texture2D(inputBuffer,vUv07);w=WEIGHT_OUTER*vec4(clampToBorder(vUv08),clampToBorder(vUv09),clampToBorder(vUv10),clampToBorder(vUv11));c+=w.x*texture2D(inputBuffer,vUv08);c+=w.y*texture2D(inputBuffer,vUv09);c+=w.z*texture2D(inputBuffer,vUv10);c+=w.w*texture2D(inputBuffer,vUv11);c+=WEIGHT_OUTER*texture2D(inputBuffer,vUv);gl_FragColor=c;
#include <colorspace_fragment>
}`,Ts="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv00;varying vec2 vUv01;varying vec2 vUv02;varying vec2 vUv03;varying vec2 vUv04;varying vec2 vUv05;varying vec2 vUv06;varying vec2 vUv07;varying vec2 vUv08;varying vec2 vUv09;varying vec2 vUv10;varying vec2 vUv11;void main(){vUv=position.xy*0.5+0.5;vUv00=vUv+texelSize*vec2(-1.0,1.0);vUv01=vUv+texelSize*vec2(1.0,1.0);vUv02=vUv+texelSize*vec2(-1.0,-1.0);vUv03=vUv+texelSize*vec2(1.0,-1.0);vUv04=vUv+texelSize*vec2(-2.0,2.0);vUv05=vUv+texelSize*vec2(0.0,2.0);vUv06=vUv+texelSize*vec2(2.0,2.0);vUv07=vUv+texelSize*vec2(-2.0,0.0);vUv08=vUv+texelSize*vec2(2.0,0.0);vUv09=vUv+texelSize*vec2(-2.0,-2.0);vUv10=vUv+texelSize*vec2(0.0,-2.0);vUv11=vUv+texelSize*vec2(2.0,-2.0);gl_Position=vec4(position.xy,1.0,1.0);}",Ms=class extends j{constructor(){super({name:"DownsamplingMaterial",uniforms:{inputBuffer:new y(null),texelSize:new y(new R)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:ys,vertexShader:Ts})}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},bs=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;uniform mediump sampler2D supportBuffer;
#else
uniform lowp sampler2D inputBuffer;uniform lowp sampler2D supportBuffer;
#endif
uniform float radius;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vec4 c=vec4(0.0);c+=texture2D(inputBuffer,vUv0)*0.0625;c+=texture2D(inputBuffer,vUv1)*0.125;c+=texture2D(inputBuffer,vUv2)*0.0625;c+=texture2D(inputBuffer,vUv3)*0.125;c+=texture2D(inputBuffer,vUv)*0.25;c+=texture2D(inputBuffer,vUv4)*0.125;c+=texture2D(inputBuffer,vUv5)*0.0625;c+=texture2D(inputBuffer,vUv6)*0.125;c+=texture2D(inputBuffer,vUv7)*0.0625;vec4 baseColor=texture2D(supportBuffer,vUv);gl_FragColor=mix(baseColor,c,radius);
#include <colorspace_fragment>
}`,Es="uniform vec2 texelSize;varying vec2 vUv;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;varying vec2 vUv4;varying vec2 vUv5;varying vec2 vUv6;varying vec2 vUv7;void main(){vUv=position.xy*0.5+0.5;vUv0=vUv+texelSize*vec2(-1.0,1.0);vUv1=vUv+texelSize*vec2(0.0,1.0);vUv2=vUv+texelSize*vec2(1.0,1.0);vUv3=vUv+texelSize*vec2(-1.0,0.0);vUv4=vUv+texelSize*vec2(1.0,0.0);vUv5=vUv+texelSize*vec2(-1.0,-1.0);vUv6=vUv+texelSize*vec2(0.0,-1.0);vUv7=vUv+texelSize*vec2(1.0,-1.0);gl_Position=vec4(position.xy,1.0,1.0);}",ws=class extends j{constructor(){super({name:"UpsamplingMaterial",uniforms:{inputBuffer:new y(null),supportBuffer:new y(null),texelSize:new y(new R),radius:new y(.85)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:bs,vertexShader:Es})}set inputBuffer(e){this.uniforms.inputBuffer.value=e}set supportBuffer(e){this.uniforms.supportBuffer.value=e}get radius(){return this.uniforms.radius.value}set radius(e){this.uniforms.radius.value=e}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},Rs=class extends C{constructor(){super("MipmapBlurPass"),this.needsSwap=!1,this.renderTarget=new z(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Upsampling.Mipmap0",this.downsamplingMipmaps=[],this.upsamplingMipmaps=[],this.downsamplingMaterial=new Ms,this.upsamplingMaterial=new ws,this.resolution=new R}get texture(){return this.renderTarget.texture}get levels(){return this.downsamplingMipmaps.length}set levels(e){if(this.levels!==e){const t=this.renderTarget;this.dispose(),this.downsamplingMipmaps=[],this.upsamplingMipmaps=[];for(let s=0;s<e;++s){const i=t.clone();i.texture.name="Downsampling.Mipmap"+s,this.downsamplingMipmaps.push(i)}this.upsamplingMipmaps.push(t);for(let s=1,i=e-1;s<i;++s){const r=t.clone();r.texture.name="Upsampling.Mipmap"+s,this.upsamplingMipmaps.push(r)}this.setSize(this.resolution.x,this.resolution.y)}}get radius(){return this.upsamplingMaterial.radius}set radius(e){this.upsamplingMaterial.radius=e}render(e,t,s,i,r){const{scene:n,camera:o}=this,{downsamplingMaterial:c,upsamplingMaterial:l}=this,{downsamplingMipmaps:u,upsamplingMipmaps:h}=this;let d=t;this.fullscreenMaterial=c;for(let p=0,x=u.length;p<x;++p){const M=u[p];c.setSize(d.width,d.height),c.inputBuffer=d.texture,e.setRenderTarget(M),e.render(n,o),d=M}this.fullscreenMaterial=l;for(let p=h.length-1;p>=0;--p){const x=h[p];l.setSize(d.width,d.height),l.inputBuffer=d.texture,l.supportBuffer=u[p].texture,e.setRenderTarget(x),e.render(n,o),d=x}}setSize(e,t){const s=this.resolution;s.set(e,t);let i=s.width,r=s.height;for(let n=0,o=this.downsamplingMipmaps.length;n<o;++n)i=Math.round(i*.5),r=Math.round(r*.5),this.downsamplingMipmaps[n].setSize(i,r),n<this.upsamplingMipmaps.length&&this.upsamplingMipmaps[n].setSize(i,r)}initialize(e,t,s){if(s!==void 0){const i=this.downsamplingMipmaps.concat(this.upsamplingMipmaps);for(const r of i)r.texture.type=s;if(s!==X)this.downsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1",this.upsamplingMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1";else if(e!==null&&e.outputColorSpace===E)for(const r of i)r.texture.colorSpace=E}}dispose(){super.dispose();for(const e of this.downsamplingMipmaps.concat(this.upsamplingMipmaps))e.dispose()}},ae=class extends le{constructor(e,t,{attributes:s=O.NONE,blendFunction:i=m.NORMAL,defines:r=new Map,uniforms:n=new Map,extensions:o=null,vertexShader:c=null}={}){super(),this.name=e,this.renderer=null,this.attributes=s,this.fragmentShader=t,this.vertexShader=c,this.defines=r,this.uniforms=n,this.extensions=o,this.blendMode=new hs(i),this.blendMode.addEventListener("change",l=>this.setChanged()),this._inputColorSpace=Pe,this._outputColorSpace=Ie}get inputColorSpace(){return this._inputColorSpace}set inputColorSpace(e){this._inputColorSpace=e,this.setChanged()}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e,this.setChanged()}set mainScene(e){}set mainCamera(e){}getName(){return this.name}setRenderer(e){this.renderer=e}getDefines(){return this.defines}getUniforms(){return this.uniforms}getExtensions(){return this.extensions}getBlendMode(){return this.blendMode}getAttributes(){return this.attributes}setAttributes(e){this.attributes=e,this.setChanged()}getFragmentShader(){return this.fragmentShader}setFragmentShader(e){this.fragmentShader=e,this.setChanged()}getVertexShader(){return this.vertexShader}setVertexShader(e){this.vertexShader=e,this.setChanged()}setChanged(){this.dispatchEvent({type:"change"})}setDepthTexture(e,t=Y){}update(e,t,s){}setSize(e,t){}initialize(e,t,s){}dispose(){for(const e of Object.keys(this)){const t=this[e];(t instanceof z||t instanceof ze||t instanceof Le||t instanceof C)&&this[e].dispose()}}},Bs=`#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D map;
#else
uniform lowp sampler2D map;
#endif
uniform float intensity;void mainImage(const in vec4 inputColor,const in vec2 uv,out vec4 outputColor){vec4 texel=texture2D(map,uv);outputColor=vec4(texel.rgb*intensity,texel.a);}`,Cs=class extends ae{constructor({blendFunction:e=m.SCREEN,luminanceThreshold:t=.9,luminanceSmoothing:s=.025,mipmapBlur:i=!1,intensity:r=1,radius:n=.85,levels:o=8,kernelSize:c=he.LARGE,resolutionScale:l=.5,width:u=w.AUTO_SIZE,height:h=w.AUTO_SIZE,resolutionX:d=u,resolutionY:p=h}={}){super("BloomEffect",Bs,{blendFunction:e,uniforms:new Map([["map",new y(null)],["intensity",new y(r)]])}),this.renderTarget=new z(1,1,{depthBuffer:!1}),this.renderTarget.texture.name="Bloom.Target",this.blurPass=new ms({kernelSize:c}),this.luminancePass=new Ss({colorOutput:!0}),this.luminanceMaterial.threshold=t,this.luminanceMaterial.smoothing=s,this.mipmapBlurPass=new Rs,this.mipmapBlurPass.enabled=i,this.mipmapBlurPass.radius=n,this.mipmapBlurPass.levels=o,this.uniforms.get("map").value=i?this.mipmapBlurPass.texture:this.renderTarget.texture;const x=this.resolution=new w(this,d,p,l);x.addEventListener("change",M=>this.setSize(x.baseWidth,x.baseHeight))}get texture(){return this.mipmapBlurPass.enabled?this.mipmapBlurPass.texture:this.renderTarget.texture}getTexture(){return this.texture}getResolution(){return this.resolution}getBlurPass(){return this.blurPass}getLuminancePass(){return this.luminancePass}get luminanceMaterial(){return this.luminancePass.fullscreenMaterial}getLuminanceMaterial(){return this.luminancePass.fullscreenMaterial}get width(){return this.resolution.width}set width(e){this.resolution.preferredWidth=e}get height(){return this.resolution.height}set height(e){this.resolution.preferredHeight=e}get dithering(){return this.blurPass.dithering}set dithering(e){this.blurPass.dithering=e}get kernelSize(){return this.blurPass.kernelSize}set kernelSize(e){this.blurPass.kernelSize=e}get distinction(){return console.warn(this.name,"distinction was removed"),1}set distinction(e){console.warn(this.name,"distinction was removed")}get intensity(){return this.uniforms.get("intensity").value}set intensity(e){this.uniforms.get("intensity").value=e}getIntensity(){return this.intensity}setIntensity(e){this.intensity=e}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}update(e,t,s){const i=this.renderTarget,r=this.luminancePass;r.enabled?(r.render(e,t),this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(e,r.renderTarget):this.blurPass.render(e,r.renderTarget,i)):this.mipmapBlurPass.enabled?this.mipmapBlurPass.render(e,t):this.blurPass.render(e,t,i)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height),this.blurPass.resolution.copy(s),this.luminancePass.setSize(e,t),this.mipmapBlurPass.setSize(e,t)}initialize(e,t,s){this.blurPass.initialize(e,t,s),this.luminancePass.initialize(e,t,s),this.mipmapBlurPass.initialize(e,t,s),s!==void 0&&(this.renderTarget.texture.type=s,e!==null&&e.outputColorSpace===E&&(this.renderTarget.texture.colorSpace=E))}},je=class extends C{constructor(e,t,s=null){super("RenderPass",e,t),this.needsSwap=!1,this.clearPass=new Ge,this.overrideMaterialManager=s===null?null:new Ee(s),this.ignoreBackground=!1,this.skipShadowMapUpdate=!1,this.selection=null}set mainScene(e){this.scene=e}set mainCamera(e){this.camera=e}get renderToScreen(){return super.renderToScreen}set renderToScreen(e){super.renderToScreen=e,this.clearPass.renderToScreen=e}get overrideMaterial(){const e=this.overrideMaterialManager;return e!==null?e.material:null}set overrideMaterial(e){const t=this.overrideMaterialManager;e!==null?t!==null?t.setMaterial(e):this.overrideMaterialManager=new Ee(e):t!==null&&(t.dispose(),this.overrideMaterialManager=null)}getOverrideMaterial(){return this.overrideMaterial}setOverrideMaterial(e){this.overrideMaterial=e}get clear(){return this.clearPass.enabled}set clear(e){this.clearPass.enabled=e}getSelection(){return this.selection}setSelection(e){this.selection=e}isBackgroundDisabled(){return this.ignoreBackground}setBackgroundDisabled(e){this.ignoreBackground=e}isShadowMapDisabled(){return this.skipShadowMapUpdate}setShadowMapDisabled(e){this.skipShadowMapUpdate=e}getClearPass(){return this.clearPass}render(e,t,s,i,r){const n=this.scene,o=this.camera,c=this.selection,l=o.layers.mask,u=n.background,h=e.shadowMap.autoUpdate,d=this.renderToScreen?null:t;c!==null&&o.layers.set(c.getLayer()),this.skipShadowMapUpdate&&(e.shadowMap.autoUpdate=!1),(this.ignoreBackground||this.clearPass.overrideClearColor!==null)&&(n.background=null),this.clearPass.enabled&&this.clearPass.render(e,t),e.setRenderTarget(d),this.overrideMaterialManager!==null?this.overrideMaterialManager.render(e,n,o):e.render(n,o),o.layers.mask=l,n.background=u,e.shadowMap.autoUpdate=h}},Us=`#include <packing>
#ifdef GL_FRAGMENT_PRECISION_HIGH
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
#ifdef DOWNSAMPLE_NORMALS
uniform lowp sampler2D normalBuffer;
#endif
varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}int findBestDepth(const in float samples[4]){float c=(samples[0]+samples[1]+samples[2]+samples[3])*0.25;float distances[4];distances[0]=abs(c-samples[0]);distances[1]=abs(c-samples[1]);distances[2]=abs(c-samples[2]);distances[3]=abs(c-samples[3]);float maxDistance=max(max(distances[0],distances[1]),max(distances[2],distances[3]));int remaining[3];int rejected[3];int i,j,k;for(i=0,j=0,k=0;i<4;++i){if(distances[i]<maxDistance){remaining[j++]=i;}else{rejected[k++]=i;}}for(;j<3;++j){remaining[j]=rejected[--k];}vec3 s=vec3(samples[remaining[0]],samples[remaining[1]],samples[remaining[2]]);c=(s.x+s.y+s.z)/3.0;distances[0]=abs(c-s.x);distances[1]=abs(c-s.y);distances[2]=abs(c-s.z);float minDistance=min(distances[0],min(distances[1],distances[2]));for(i=0;i<3;++i){if(distances[i]==minDistance){break;}}return remaining[i];}void main(){float d[4];d[0]=readDepth(vUv0);d[1]=readDepth(vUv1);d[2]=readDepth(vUv2);d[3]=readDepth(vUv3);int index=findBestDepth(d);
#ifdef DOWNSAMPLE_NORMALS
vec3 n[4];n[0]=texture2D(normalBuffer,vUv0).rgb;n[1]=texture2D(normalBuffer,vUv1).rgb;n[2]=texture2D(normalBuffer,vUv2).rgb;n[3]=texture2D(normalBuffer,vUv3).rgb;
#else
vec3 n[4];n[0]=vec3(0.0);n[1]=vec3(0.0);n[2]=vec3(0.0);n[3]=vec3(0.0);
#endif
gl_FragColor=vec4(n[index],d[index]);}`,_s="uniform vec2 texelSize;varying vec2 vUv0;varying vec2 vUv1;varying vec2 vUv2;varying vec2 vUv3;void main(){vec2 uv=position.xy*0.5+0.5;vUv0=uv;vUv1=vec2(uv.x,uv.y+texelSize.y);vUv2=vec2(uv.x+texelSize.x,uv.y);vUv3=uv+texelSize;gl_Position=vec4(position.xy,1.0,1.0);}",As=class extends j{constructor(){super({name:"DepthDownsamplingMaterial",defines:{DEPTH_PACKING:"0"},uniforms:{depthBuffer:new y(null),normalBuffer:new y(null),texelSize:new y(new R)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,fragmentShader:Us,vertexShader:_s})}set depthBuffer(e){this.uniforms.depthBuffer.value=e}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=Y){this.depthBuffer=e,this.depthPacking=t}set normalBuffer(e){this.uniforms.normalBuffer.value=e,e!==null?this.defines.DOWNSAMPLE_NORMALS="1":delete this.defines.DOWNSAMPLE_NORMALS,this.needsUpdate=!0}setNormalBuffer(e){this.normalBuffer=e}setTexelSize(e,t){this.uniforms.texelSize.value.set(e,t)}setSize(e,t){this.uniforms.texelSize.value.set(1/e,1/t)}},Ps=class extends C{constructor({normalBuffer:e=null,resolutionScale:t=.5,width:s=w.AUTO_SIZE,height:i=w.AUTO_SIZE,resolutionX:r=s,resolutionY:n=i}={}){super("DepthDownsamplingPass");const o=new As;o.normalBuffer=e,this.fullscreenMaterial=o,this.needsDepthTexture=!0,this.needsSwap=!1,this.renderTarget=new z(1,1,{minFilter:q,magFilter:q,depthBuffer:!1,type:qe}),this.renderTarget.texture.name="DepthDownsamplingPass.Target",this.renderTarget.texture.generateMipmaps=!1;const c=this.resolution=new w(this,r,n,t);c.addEventListener("change",l=>this.setSize(c.baseWidth,c.baseHeight))}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}setDepthTexture(e,t=Y){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t}render(e,t,s,i,r){e.setRenderTarget(this.renderToScreen?null:this.renderTarget),e.render(this.scene,this.camera)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height),this.fullscreenMaterial.setSize(e,t)}initialize(e,t,s){const i=e.getContext();if(!(i.getExtension("EXT_color_buffer_float")||i.getExtension("EXT_color_buffer_half_float")))throw new Error("Rendering to float texture is not supported.")}},Is=`#include <common>
#include <packing>
#include <dithering_pars_fragment>
#define packFloatToRGBA(v) packDepthToRGBA(v)
#define unpackRGBAToFloat(v) unpackRGBAToDepth(v)
#ifdef FRAMEBUFFER_PRECISION_HIGH
uniform mediump sampler2D inputBuffer;
#else
uniform lowp sampler2D inputBuffer;
#endif
#if DEPTH_PACKING == 3201
uniform lowp sampler2D depthBuffer;
#elif defined(GL_FRAGMENT_PRECISION_HIGH)
uniform highp sampler2D depthBuffer;
#else
uniform mediump sampler2D depthBuffer;
#endif
uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;vec4 sRGBToLinear(const in vec4 value){return vec4(mix(pow(value.rgb*0.9478672986+vec3(0.0521327014),vec3(2.4)),value.rgb*0.0773993808,vec3(lessThanEqual(value.rgb,vec3(0.04045)))),value.a);}float readDepth(const in vec2 uv){
#if DEPTH_PACKING == 3201
return unpackRGBAToDepth(texture2D(depthBuffer,uv));
#else
return texture2D(depthBuffer,uv).r;
#endif
}float getViewZ(const in float depth){
#ifdef PERSPECTIVE_CAMERA
return perspectiveDepthToViewZ(depth,cameraNear,cameraFar);
#else
return orthographicDepthToViewZ(depth,cameraNear,cameraFar);
#endif
}vec3 RGBToHCV(const in vec3 RGB){vec4 P=mix(vec4(RGB.bg,-1.0,2.0/3.0),vec4(RGB.gb,0.0,-1.0/3.0),step(RGB.b,RGB.g));vec4 Q=mix(vec4(P.xyw,RGB.r),vec4(RGB.r,P.yzx),step(P.x,RGB.r));float C=Q.x-min(Q.w,Q.y);float H=abs((Q.w-Q.y)/(6.0*C+EPSILON)+Q.z);return vec3(H,C,Q.x);}vec3 RGBToHSL(const in vec3 RGB){vec3 HCV=RGBToHCV(RGB);float L=HCV.z-HCV.y*0.5;float S=HCV.y/(1.0-abs(L*2.0-1.0)+EPSILON);return vec3(HCV.x,S,L);}vec3 HueToRGB(const in float H){float R=abs(H*6.0-3.0)-1.0;float G=2.0-abs(H*6.0-2.0);float B=2.0-abs(H*6.0-4.0);return clamp(vec3(R,G,B),0.0,1.0);}vec3 HSLToRGB(const in vec3 HSL){vec3 RGB=HueToRGB(HSL.x);float C=(1.0-abs(2.0*HSL.z-1.0))*HSL.y;return(RGB-0.5)*C+HSL.z;}FRAGMENT_HEAD void main(){FRAGMENT_MAIN_UV vec4 color0=texture2D(inputBuffer,UV);vec4 color1=vec4(0.0);FRAGMENT_MAIN_IMAGE color0.a=clamp(color0.a,0.0,1.0);gl_FragColor=color0;
#ifdef ENCODE_OUTPUT
#include <colorspace_fragment>
#endif
#include <dithering_fragment>
}`,Ds="uniform vec2 resolution;uniform vec2 texelSize;uniform float cameraNear;uniform float cameraFar;uniform float aspect;uniform float time;varying vec2 vUv;VERTEX_HEAD void main(){vUv=position.xy*0.5+0.5;VERTEX_MAIN_SUPPORT gl_Position=vec4(position.xy,1.0,1.0);}",zs=class extends j{constructor(e,t,s,i,r=!1){super({name:"EffectMaterial",defines:{THREE_REVISION:Fe.replace(/\D+/g,""),DEPTH_PACKING:"0",ENCODE_OUTPUT:"1"},uniforms:{inputBuffer:new y(null),depthBuffer:new y(null),resolution:new y(new R),texelSize:new y(new R),cameraNear:new y(.3),cameraFar:new y(1e3),aspect:new y(1),time:new y(0)},blending:K,toneMapped:!1,depthWrite:!1,depthTest:!1,dithering:r}),e&&this.setShaderParts(e),t&&this.setDefines(t),s&&this.setUniforms(s),this.copyCameraSettings(i)}set inputBuffer(e){this.uniforms.inputBuffer.value=e}setInputBuffer(e){this.uniforms.inputBuffer.value=e}get depthBuffer(){return this.uniforms.depthBuffer.value}set depthBuffer(e){this.uniforms.depthBuffer.value=e}get depthPacking(){return Number(this.defines.DEPTH_PACKING)}set depthPacking(e){this.defines.DEPTH_PACKING=e.toFixed(0),this.needsUpdate=!0}setDepthBuffer(e,t=Y){this.depthBuffer=e,this.depthPacking=t}setShaderData(e){this.setShaderParts(e.shaderParts),this.setDefines(e.defines),this.setUniforms(e.uniforms),this.setExtensions(e.extensions)}setShaderParts(e){return this.fragmentShader=Is.replace(S.FRAGMENT_HEAD,e.get(S.FRAGMENT_HEAD)||"").replace(S.FRAGMENT_MAIN_UV,e.get(S.FRAGMENT_MAIN_UV)||"").replace(S.FRAGMENT_MAIN_IMAGE,e.get(S.FRAGMENT_MAIN_IMAGE)||""),this.vertexShader=Ds.replace(S.VERTEX_HEAD,e.get(S.VERTEX_HEAD)||"").replace(S.VERTEX_MAIN_SUPPORT,e.get(S.VERTEX_MAIN_SUPPORT)||""),this.needsUpdate=!0,this}setDefines(e){for(const t of e.entries())this.defines[t[0]]=t[1];return this.needsUpdate=!0,this}setUniforms(e){for(const t of e.entries())this.uniforms[t[0]]=t[1];return this}setExtensions(e){this.extensions={};for(const t of e)this.extensions[t]=!0;return this}get encodeOutput(){return this.defines.ENCODE_OUTPUT!==void 0}set encodeOutput(e){this.encodeOutput!==e&&(e?this.defines.ENCODE_OUTPUT="1":delete this.defines.ENCODE_OUTPUT,this.needsUpdate=!0)}isOutputEncodingEnabled(e){return this.encodeOutput}setOutputEncodingEnabled(e){this.encodeOutput=e}get time(){return this.uniforms.time.value}set time(e){this.uniforms.time.value=e}setDeltaTime(e){this.uniforms.time.value+=e}adoptCameraSettings(e){this.copyCameraSettings(e)}copyCameraSettings(e){e&&(this.uniforms.cameraNear.value=e.near,this.uniforms.cameraFar.value=e.far,e instanceof Oe?this.defines.PERSPECTIVE_CAMERA="1":delete this.defines.PERSPECTIVE_CAMERA,this.needsUpdate=!0)}setSize(e,t){const s=this.uniforms;s.resolution.value.set(e,t),s.texelSize.value.set(1/e,1/t),s.aspect.value=e/t}static get Section(){return S}};function we(e,t,s){for(const i of t){const r="$1"+e+i.charAt(0).toUpperCase()+i.slice(1),n=new RegExp("([^\\.])(\\b"+i+"\\b)","g");for(const o of s.entries())o[1]!==null&&s.set(o[0],o[1].replace(n,r))}}function Ls(e,t,s){let i=t.getFragmentShader(),r=t.getVertexShader();const n=i!==void 0&&/mainImage/.test(i),o=i!==void 0&&/mainUv/.test(i);if(s.attributes|=t.getAttributes(),i===void 0)throw new Error(`Missing fragment shader (${t.name})`);if(o&&s.attributes&O.CONVOLUTION)throw new Error(`Effects that transform UVs are incompatible with convolution effects (${t.name})`);if(!n&&!o)throw new Error(`Could not find mainImage or mainUv function (${t.name})`);{const c=/\w+\s+(\w+)\([\w\s,]*\)\s*{/g,l=s.shaderParts;let u=l.get(S.FRAGMENT_HEAD)||"",h=l.get(S.FRAGMENT_MAIN_UV)||"",d=l.get(S.FRAGMENT_MAIN_IMAGE)||"",p=l.get(S.VERTEX_HEAD)||"",x=l.get(S.VERTEX_MAIN_SUPPORT)||"";const M=new Set,b=new Set;if(o&&(h+=`	${e}MainUv(UV);
`,s.uvTransformation=!0),r!==null&&/mainSupport/.test(r)){const T=/mainSupport *\([\w\s]*?uv\s*?\)/.test(r);x+=`	${e}MainSupport(`,x+=T?`vUv);
`:`);
`;for(const g of r.matchAll(/(?:varying\s+\w+\s+([\S\s]*?);)/g))for(const B of g[1].split(/\s*,\s*/))s.varyings.add(B),M.add(B),b.add(B);for(const g of r.matchAll(c))b.add(g[1])}for(const T of i.matchAll(c))b.add(T[1]);for(const T of t.defines.keys())b.add(T.replace(/\([\w\s,]*\)/g,""));for(const T of t.uniforms.keys())b.add(T);b.delete("while"),b.delete("for"),b.delete("if"),t.uniforms.forEach((T,g)=>s.uniforms.set(e+g.charAt(0).toUpperCase()+g.slice(1),T)),t.defines.forEach((T,g)=>s.defines.set(e+g.charAt(0).toUpperCase()+g.slice(1),T));const A=new Map([["fragment",i],["vertex",r]]);we(e,b,s.defines),we(e,b,A),i=A.get("fragment"),r=A.get("vertex");const _=t.blendMode;if(s.blendModes.set(_.blendFunction,_),n){t.inputColorSpace!==null&&t.inputColorSpace!==s.colorSpace&&(d+=t.inputColorSpace===E?`color0 = sRGBTransferOETF(color0);
	`:`color0 = sRGBToLinear(color0);
	`),t.outputColorSpace!==Ie?s.colorSpace=t.outputColorSpace:t.inputColorSpace!==null&&(s.colorSpace=t.inputColorSpace);const T=/MainImage *\([\w\s,]*?depth[\w\s,]*?\)/;d+=`${e}MainImage(color0, UV, `,s.attributes&O.DEPTH&&T.test(i)&&(d+="depth, ",s.readDepth=!0),d+=`color1);
	`;const g=e+"BlendOpacity";s.uniforms.set(g,_.opacity),d+=`color0 = blend${_.blendFunction}(color0, color1, ${g});

	`,u+=`uniform float ${g};

`}if(u+=i+`
`,r!==null&&(p+=r+`
`),l.set(S.FRAGMENT_HEAD,u),l.set(S.FRAGMENT_MAIN_UV,h),l.set(S.FRAGMENT_MAIN_IMAGE,d),l.set(S.VERTEX_HEAD,p),l.set(S.VERTEX_MAIN_SUPPORT,x),t.extensions!==null)for(const T of t.extensions)s.extensions.add(T)}}var Fs=class extends C{constructor(e,...t){super("EffectPass"),this.fullscreenMaterial=new zs(null,null,null,e),this.listener=s=>this.handleEvent(s),this.effects=[],this.setEffects(t),this.skipRendering=!1,this.minTime=1,this.maxTime=Number.POSITIVE_INFINITY,this.timeScale=1}set mainScene(e){for(const t of this.effects)t.mainScene=e}set mainCamera(e){this.fullscreenMaterial.copyCameraSettings(e);for(const t of this.effects)t.mainCamera=e}get encodeOutput(){return this.fullscreenMaterial.encodeOutput}set encodeOutput(e){this.fullscreenMaterial.encodeOutput=e}get dithering(){return this.fullscreenMaterial.dithering}set dithering(e){const t=this.fullscreenMaterial;t.dithering=e,t.needsUpdate=!0}setEffects(e){for(const t of this.effects)t.removeEventListener("change",this.listener);this.effects=e.sort((t,s)=>s.attributes-t.attributes);for(const t of this.effects)t.addEventListener("change",this.listener)}updateMaterial(){const e=new At;let t=0;for(const o of this.effects)if(o.blendMode.blendFunction===m.DST)e.attributes|=o.getAttributes()&O.DEPTH;else{if(e.attributes&o.getAttributes()&O.CONVOLUTION)throw new Error(`Convolution effects cannot be merged (${o.name})`);Ls("e"+t++,o,e)}let s=e.shaderParts.get(S.FRAGMENT_HEAD),i=e.shaderParts.get(S.FRAGMENT_MAIN_IMAGE),r=e.shaderParts.get(S.FRAGMENT_MAIN_UV);const n=/\bblend\b/g;for(const o of e.blendModes.values())s+=o.getShaderCode().replace(n,`blend${o.blendFunction}`)+`
`;e.attributes&O.DEPTH?(e.readDepth&&(i=`float depth = readDepth(UV);

	`+i),this.needsDepthTexture=this.getDepthTexture()===null):this.needsDepthTexture=!1,e.colorSpace===E&&(i+=`color0 = sRGBToLinear(color0);
	`),e.uvTransformation?(r=`vec2 transformedUv = vUv;
`+r,e.defines.set("UV","transformedUv")):e.defines.set("UV","vUv"),e.shaderParts.set(S.FRAGMENT_HEAD,s),e.shaderParts.set(S.FRAGMENT_MAIN_IMAGE,i),e.shaderParts.set(S.FRAGMENT_MAIN_UV,r);for(const[o,c]of e.shaderParts)c!==null&&e.shaderParts.set(o,c.trim().replace(/^#/,`
#`));this.skipRendering=t===0,this.needsSwap=!this.skipRendering,this.fullscreenMaterial.setShaderData(e)}recompile(){this.updateMaterial()}getDepthTexture(){return this.fullscreenMaterial.depthBuffer}setDepthTexture(e,t=Y){this.fullscreenMaterial.depthBuffer=e,this.fullscreenMaterial.depthPacking=t;for(const s of this.effects)s.setDepthTexture(e,t)}render(e,t,s,i,r){for(const n of this.effects)n.update(e,t,i);if(!this.skipRendering||this.renderToScreen){const n=this.fullscreenMaterial;n.inputBuffer=t.texture,n.time+=i*this.timeScale,e.setRenderTarget(this.renderToScreen?null:s),e.render(this.scene,this.camera)}}setSize(e,t){this.fullscreenMaterial.setSize(e,t);for(const s of this.effects)s.setSize(e,t)}initialize(e,t,s){this.renderer=e;for(const i of this.effects)i.initialize(e,t,s);this.updateMaterial(),s!==void 0&&s!==X&&(this.fullscreenMaterial.defines.FRAMEBUFFER_PRECISION_HIGH="1")}dispose(){super.dispose();for(const e of this.effects)e.removeEventListener("change",this.listener),e.dispose()}handleEvent(e){switch(e.type){case"change":this.recompile();break}}},Os=class extends C{constructor(e,t,{renderTarget:s,resolutionScale:i=1,width:r=w.AUTO_SIZE,height:n=w.AUTO_SIZE,resolutionX:o=r,resolutionY:c=n}={}){super("NormalPass"),this.needsSwap=!1,this.renderPass=new je(e,t,new Qe);const l=this.renderPass;l.ignoreBackground=!0,l.skipShadowMapUpdate=!0;const u=l.getClearPass();u.overrideClearColor=new De(7829503),u.overrideClearAlpha=1,this.renderTarget=s,this.renderTarget===void 0&&(this.renderTarget=new z(1,1,{minFilter:q,magFilter:q}),this.renderTarget.texture.name="NormalPass.Target");const h=this.resolution=new w(this,o,c,i);h.addEventListener("change",d=>this.setSize(h.baseWidth,h.baseHeight))}set mainScene(e){this.renderPass.mainScene=e}set mainCamera(e){this.renderPass.mainCamera=e}get texture(){return this.renderTarget.texture}getTexture(){return this.renderTarget.texture}getResolution(){return this.resolution}getResolutionScale(){return this.resolution.scale}setResolutionScale(e){this.resolution.scale=e}render(e,t,s,i,r){const n=this.renderToScreen?null:this.renderTarget;this.renderPass.render(e,n,n)}setSize(e,t){const s=this.resolution;s.setBaseSize(e,t),this.renderTarget.setSize(s.width,s.height)}};const Ns=v.createContext(null),Re=e=>(e.getAttributes()&O.CONVOLUTION)===O.CONVOLUTION,Hs=J.memo(v.forwardRef(({children:e,camera:t,scene:s,resolutionScale:i,enabled:r=!0,renderPriority:n=1,autoClear:o=!0,depthBuffer:c,enableNormalPass:l,stencilBuffer:u,multisampling:h=8,frameBufferType:d=it},p)=>{const{gl:x,scene:M,camera:b,size:A}=ce(),_=s||M,T=t||b,[g,B,D]=v.useMemo(()=>{const N=tt(),P=new _t(x,{depthBuffer:c,stencilBuffer:u,multisampling:h>0&&N?h:0,frameBufferType:d});P.addPass(new je(_,T));let F=null,I=null;return l&&(I=new Os(_,T),I.enabled=!1,P.addPass(I),i!==void 0&&N&&(F=new Ps({normalBuffer:I.texture,resolutionScale:i}),F.enabled=!1,P.addPass(F))),[P,I,F]},[T,x,c,u,h,d,_,l,i]);v.useEffect(()=>g==null?void 0:g.setSize(A.width,A.height),[g,A]),ee((N,P)=>{if(r){const F=x.autoClear;x.autoClear=o,u&&!o&&x.clearStencil(),g.render(P),x.autoClear=F}},r?n:0);const de=v.useRef(null);v.useLayoutEffect(()=>{var N;const P=[],F=(N=de.current)==null?void 0:N.__r3f;if(F&&g){const I=F.objects;for(let k=0;k<I.length;k++){const Z=I[k];if(Z instanceof ae){const fe=[Z];if(!Re(Z)){let te=null;for(;(te=I[k+1])instanceof ae&&!Re(te);)fe.push(te),k++}const Ve=new Fs(T,...fe);P.push(Ve)}else Z instanceof C&&P.push(Z)}for(const k of P)g==null||g.addPass(k);B&&(B.enabled=!0),D&&(D.enabled=!0)}return()=>{for(const I of P)g==null||g.removePass(I);B&&(B.enabled=!1),D&&(D.enabled=!1)}},[g,e,T,B,D]),v.useEffect(()=>{const N=x.toneMapping;return x.toneMapping=st,()=>{x.toneMapping=N}},[x]);const ke=v.useMemo(()=>({composer:g,normalPass:B,downSamplingPass:D,resolutionScale:i,camera:T,scene:_}),[g,B,D,i,T,_]);return v.useImperativeHandle(p,()=>g,[g]),a.jsx(Ns.Provider,{value:ke,children:a.jsx("group",{ref:de,children:e})})}));let Gs=0;const Be=new WeakMap,js=(e,t)=>J.forwardRef(function({blendFunction:i=t==null?void 0:t.blendFunction,opacity:r=t==null?void 0:t.opacity,...n},o){let c=Be.get(e);if(!c){const h=`@react-three/postprocessing/${e.name}-${Gs++}`;rt({[h]:e}),Be.set(e,c=h)}const l=ce(h=>h.camera),u=J.useMemo(()=>{var h,d;return[...(h=t==null?void 0:t.args)!=null?h:[],...(d=n.args)!=null?d:[{...t,...n}]]},[JSON.stringify(n)]);return a.jsx(c,{camera:l,"blendMode-blendFunction":i,"blendMode-opacity-value":r,...n,ref:o,args:u})}),ks=js(Cs,{blendFunction:m.ADD});function Vs({camera:e}){const{radius:t,length:s}=L();return v.useEffect(()=>{e&&(e.position.set(t*.75,t*.75,s*.5),e.lookAt(0,0,0))},[e,t,s]),a.jsx(nt,{camera:e,makeDefault:!0,enableDamping:!0,dampingFactor:.05,minDistance:10,maxDistance:Math.max(t*2,s),minPolarAngle:Math.PI*.1,maxPolarAngle:Math.PI*.9,rotateSpeed:.5,zoomSpeed:.5,panSpeed:.5})}const Ce=100,Ws=5,Ue=.003;function Xs({camera:e}){const{moveForward:t,moveBackward:s,moveLeft:i,moveRight:r,mouseX:n,mouseY:o,sprint:c}=ue(),l=v.useRef(new oe(0,0,0,"YXZ")),u=v.useRef(new U),h=v.useRef(new U);return v.useEffect(()=>(e&&(e.position.set(0,100,500),e.rotation.set(0,0,0)),()=>{document.pointerLockElement===document.body&&document.exitPointerLock()}),[e]),ee((d,p)=>{if(e&&((Math.abs(n)>.01||Math.abs(o)>.01)&&(l.current.y-=n*Ue,l.current.x=Math.max(-Math.PI/2,Math.min(Math.PI/2,l.current.x-o*Ue)),e.rotation.copy(l.current)),h.current.set(0,0,0),t&&(h.current.z-=1),s&&(h.current.z+=1),i&&(h.current.x-=1),r&&(h.current.x+=1),h.current.lengthSq()>0)){h.current.normalize(),u.current.copy(h.current),u.current.applyEuler(l.current);const x=c?Ce*Ws:Ce;u.current.multiplyScalar(x*p),e.position.add(u.current)}}),null}function Ks({camera:e}){const{radius:t,length:s,ambientLightIntensity:i,ambientLightColor:r,cameraFOV:n,cameraType:o}=L(),{gl:c}=ce();return v.useEffect(()=>{e&&(e.fov=n,e.updateProjectionMatrix())},[e,n]),v.useEffect(()=>{if(e&&c){e.near=.1;const l=Math.max(t,s);e.far=l*2.5,e.updateProjectionMatrix(),c.capabilities.logarithmicDepthBuffer=!0,c.setPixelRatio(window.devicePixelRatio),c.outputColorSpace="srgb"}},[e,c,t,s]),a.jsxs(a.Fragment,{children:[a.jsx("ambientLight",{intensity:i,color:r}),a.jsx("hemisphereLight",{args:["#4466aa","#000000",.2],position:[0,1,0]}),a.jsx(Hs,{children:a.jsx(ks,{intensity:1.5,luminanceThreshold:.6,luminanceSmoothing:.9,mipmapBlur:!0,radius:.8})}),a.jsx(Mt,{}),o===V.Orbit?a.jsx(Vs,{camera:e}):o===V.FreeMove?a.jsx(Xs,{camera:e}):a.jsx(dt,{camera:e})]})}const Ys=500,Zs=1e4,$s=1e3,qs=1e4,f={container:{position:"fixed",top:"1rem",left:"1rem",backgroundColor:"rgba(0, 0, 0, 0.7)",padding:"1rem",borderRadius:"8px",color:"white",fontFamily:"Arial, sans-serif",width:"380px",transition:"transform 0.3s ease-in-out"},toggleButton:{position:"fixed",top:"1rem",right:"1rem",backgroundColor:"rgba(0, 0, 0, 0.7)",color:"white",border:"none",padding:"0.5rem 1rem",borderRadius:"4px",cursor:"pointer",fontFamily:"Arial, sans-serif",zIndex:1e3,transition:"background-color 0.2s"},hiddenMenu:{transform:"translateX(-120%)"},tabs:{display:"flex",marginBottom:"1rem",borderBottom:"1px solid rgba(255, 255, 255, 0.2)"},tab:{padding:"0.5rem 1rem",cursor:"pointer",backgroundColor:"transparent",border:"none",color:"rgba(255, 255, 255, 0.6)",borderBottom:"2px solid transparent",transition:"all 0.2s"},activeTab:{color:"white",borderBottom:"2px solid white"},controlGroup:{marginBottom:"1rem"},label:{display:"block",marginBottom:"0.5rem"},input:{width:"100%"},select:{width:"100%",padding:"0.5rem",backgroundColor:"rgba(255, 255, 255, 0.9)",border:"none",borderRadius:"4px",color:"#000"},hint:{fontSize:"0.8rem",color:"rgba(255, 255, 255, 0.6)",marginTop:"0.5rem"},colorInput:{width:"100%",height:"40px",padding:"0",border:"none",borderRadius:"4px",cursor:"pointer"}},Qs=()=>{const{radius:e,length:t,endcapType:s,stationColor:i,endcapColor:r,showWireframe:n,setRadius:o,setLength:c,setEndcapType:l,setStationColor:u,setEndcapColor:h,setShowWireframe:d}=L();return a.jsxs("div",{children:[a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Radius: ",e,"m"]}),a.jsx("input",{type:"range",min:Ys,max:Zs,step:"100",value:e,onChange:p=>o(parseInt(p.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Length: ",t,"m"]}),a.jsx("input",{type:"range",min:$s,max:qs,step:"100",value:t,onChange:p=>c(parseInt(p.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Endcap Type"}),a.jsxs("select",{value:s,onChange:p=>l(p.target.value),style:f.select,children:[a.jsx("option",{value:W.None,children:"None"}),a.jsx("option",{value:W.Flat,children:"Flat"}),a.jsx("option",{value:W.Spherical,children:"Convex"})]})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Station Color"}),a.jsx("input",{type:"color",value:i,onChange:p=>u(p.target.value),style:f.colorInput})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Endcap Color"}),a.jsx("input",{type:"color",value:r,onChange:p=>h(p.target.value),style:f.colorInput})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Show Wireframe"}),a.jsx("input",{type:"checkbox",checked:n,onChange:()=>d(!n)})]})]})},Js=()=>{const{hillsCount:e,hillHeight:t,hillColor:s,hillRatio:i,radius:r,setHillsCount:n,setHillHeight:o,setHillRatio:c,setHillColor:l}=L();return a.jsxs("div",{children:[a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Number of Hills: ",e]}),a.jsx("input",{type:"range",min:0,max:12,step:"1",value:e,onChange:u=>n(parseInt(u.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Hill Height: ",t,"m"]}),a.jsx("input",{type:"range",min:10,max:r/2,step:"10",value:t,onChange:u=>o(parseInt(u.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Hill Ratio: ",i]}),a.jsx("input",{type:"range",min:.1,max:1,step:"0.01",value:i,onChange:u=>c(parseFloat(u.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Hill Color"}),a.jsx("input",{type:"color",value:s,onChange:u=>l(u.target.value),style:f.colorInput})]})]})},ei=()=>{const{lightIntensity:e,ambientLightIntensity:t,lightPosition:s,lightColor:i,ambientLightColor:r,length:n,setLightIntensity:o,setLightPosition:c,setLightColor:l,setAmbientLightIntensity:u,setAmbientLightColor:h}=L();return a.jsxs("div",{children:[a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Light Intensity: ",e.toFixed(1)]}),a.jsx("input",{type:"range",min:.1,max:20,step:"0.1",value:e,onChange:d=>o(parseFloat(d.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Light Position: ",s,"m"]}),a.jsx("input",{type:"range",min:-n/2,max:n/2,step:"10",value:s,onChange:d=>c(parseInt(d.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Light Color"}),a.jsx("input",{type:"color",value:i,onChange:d=>l(d.target.value),style:f.colorInput})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Ambient Light Intensity: ",t.toFixed(1)]}),a.jsx("input",{type:"range",min:0,max:8,step:"0.1",value:t,onChange:d=>u(parseFloat(d.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Ambient Light Color"}),a.jsx("input",{type:"color",value:r,onChange:d=>h(d.target.value),style:f.colorInput})]})]})},ti=()=>{const{cameraType:e,cameraFOV:t,setCameraType:s,setCameraFOV:i}=L();return a.jsxs("div",{children:[a.jsxs("div",{style:f.controlGroup,children:[a.jsxs("label",{style:f.label,children:["Camera FOV: ",t.toFixed(1)]}),a.jsx("input",{type:"range",min:30,max:120,step:"1",value:t,onChange:r=>i(parseFloat(r.target.value)),style:f.input})]}),a.jsxs("div",{style:f.controlGroup,children:[a.jsx("label",{style:f.label,children:"Camera Type"}),a.jsxs("select",{value:e,onChange:r=>s(r.target.value),style:f.select,children:[a.jsx("option",{value:V.ThirdPerson,children:"Third Person"}),a.jsx("option",{value:V.Orbit,children:"Orbit"}),a.jsx("option",{value:V.FreeMove,children:"Free Move"})]})]})]})};function si(){const[e,t]=v.useState("station"),[s,i]=v.useState(!0),r=c=>({...f.tab,...e===c?f.activeTab:{}}),n={...f.container,...s?{}:f.hiddenMenu},o={...f.toggleButton,"&:hover":{backgroundColor:"rgba(0, 0, 0, 0.8)"}};return a.jsxs(a.Fragment,{children:[a.jsx("button",{style:o,onClick:()=>i(!s),children:s?"Hide Menu":"Show Menu"}),a.jsxs("div",{style:n,children:[a.jsxs("div",{style:f.tabs,children:[a.jsx("button",{style:r("station"),onClick:()=>t("station"),children:"Station"}),a.jsx("button",{style:r("environment"),onClick:()=>t("environment"),children:"Environment"}),a.jsx("button",{style:r("lighting"),onClick:()=>t("lighting"),children:"Lighting"}),a.jsx("button",{style:r("camera"),onClick:()=>t("camera"),children:"Camera"})]}),e==="station"&&a.jsx(Qs,{}),e==="environment"&&a.jsx(Js,{}),e==="lighting"&&a.jsx(ei,{}),e==="camera"&&a.jsx(ti,{})]})]})}function ii(){const e=v.useMemo(()=>{const s=window.innerWidth/window.innerHeight,i=.1,r=1e3,n=new Oe(60,s,i,r);return n.position.set(5,5,5),n},[]);return a.jsxs("div",{className:"app",children:[a.jsx(at,{shadows:!0,camera:e,gl:{antialias:!0,logarithmicDepthBuffer:!0},children:a.jsx(Ks,{camera:e})}),a.jsx(si,{})]})}ot.createRoot(document.getElementById("root")).render(a.jsx(J.StrictMode,{children:a.jsx(ii,{})}));
//# sourceMappingURL=index-DdWeAUGm.js.map
